{"ast":null,"code":"var _jsxFileName = \"/Users/sravya/Desktop/react-frontend-32-finished/src/user/pages/Auth.js\";\nimport React, { useState, useContext } from \"react\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./Auth.css\";\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: \"\",\n      isValid: false\n    },\n    password: {\n      value: \"\",\n      isValid: false\n    },\n    confirmPassword: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({ ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid && formState.inputs.confirmPassword.isValid);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: \"\",\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {} else {\n      try {\n        const response = fetch(\"http://127.0.0.1:5000/api/v1/users/signup\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.email.value,\n            passwordConfirm: formState.inputs.confirmPassword.value\n          })\n        });\n        const data = await (await response).json();\n      } catch (err) {\n        console.log(\"ERROR\", err);\n      }\n    }\n\n    auth.login();\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"Login Required\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: authSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, !isLoginMode && /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"name\",\n    type: \"text\",\n    label: \"Your Name\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a name.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"email\",\n    type: \"email\",\n    label: \"E-Mail\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email address.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid password, at least 5 characters.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"confirmPassword\",\n    type: \"password\",\n    label: \"Confirm Password\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid password, at least 5 characters.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, isLoginMode ? \"LOGIN\" : \"SIGNUP\")), /*#__PURE__*/React.createElement(Button, {\n    inverse: true,\n    onClick: switchModeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, \"SWITCH TO \", isLoginMode ? \"SIGNUP\" : \"LOGIN\"));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/Users/sravya/Desktop/react-frontend-32-finished/src/user/pages/Auth.js"],"names":["React","useState","useContext","Card","Input","Button","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","AuthContext","Auth","auth","isLoginMode","setIsLoginMode","formState","inputHandler","setFormData","email","value","isValid","password","confirmPassword","switchModeHandler","inputs","name","undefined","prevMode","authSubmitHandler","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","passwordConfirm","data","json","err","console","log","login"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./Auth.css\";\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n      confirmPassword: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n        },\n        formState.inputs.email.isValid &&\n          formState.inputs.password.isValid &&\n          formState.inputs.confirmPassword.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: \"\",\n            isValid: false,\n          },\n        },\n        false\n      );\n    }\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  const authSubmitHandler = async (event) => {\n    event.preventDefault();\n    if (isLoginMode) {\n    } else {\n      try {\n        const response = fetch(\"http://127.0.0.1:5000/api/v1/users/signup\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.email.value,\n            passwordConfirm: formState.inputs.confirmPassword.value,\n          }),\n        });\n        const data = await (await response).json();\n      } catch (err) {\n        console.log(\"ERROR\", err);\n      }\n    }\n\n    auth.login();\n  };\n\n  return (\n    <Card className=\"authentication\">\n      <h2>Login Required</h2>\n      <hr />\n      <form onSubmit={authSubmitHandler}>\n        {!isLoginMode && (\n          <Input\n            element=\"input\"\n            id=\"name\"\n            type=\"text\"\n            label=\"Your Name\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a name.\"\n            onInput={inputHandler}\n          />\n        )}\n        <Input\n          element=\"input\"\n          id=\"email\"\n          type=\"email\"\n          label=\"E-Mail\"\n          validators={[VALIDATOR_EMAIL()]}\n          errorText=\"Please enter a valid email address.\"\n          onInput={inputHandler}\n        />\n        <Input\n          element=\"input\"\n          id=\"password\"\n          type=\"password\"\n          label=\"Password\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid password, at least 5 characters.\"\n          onInput={inputHandler}\n        />\n        <Input\n          element=\"input\"\n          id=\"confirmPassword\"\n          type=\"password\"\n          label=\"Confirm Password\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid password, at least 5 characters.\"\n          onInput={inputHandler}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\n        </Button>\n      </form>\n      <Button inverse onClick={switchModeHandler}>\n        SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\n      </Button>\n    </Card>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}